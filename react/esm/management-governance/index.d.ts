export { default as ManagementGovernanceArchAwsAppconfig } from './arch-aws-appconfig'
export { default as ManagementGovernanceArchAwsApplicationAutoScaling } from './arch-aws-application-auto-scaling'
export { default as ManagementGovernanceArchAwsAutoScaling } from './arch-aws-auto-scaling'
export { default as ManagementGovernanceArchAwsBackintAgent } from './arch-aws-backint-agent'
export { default as ManagementGovernanceArchAwsChatbot } from './arch-aws-chatbot'
export { default as ManagementGovernanceArchAwsCloudformation } from './arch-aws-cloudformation'
export { default as ManagementGovernanceArchAwsCloudtrail } from './arch-aws-cloudtrail'
export { default as ManagementGovernanceArchAwsConfig } from './arch-aws-config'
export { default as ManagementGovernanceArchAwsControlTower } from './arch-aws-control-tower'
export { default as ManagementGovernanceArchAwsDistroForOpentelemetry } from './arch-aws-distro-for-opentelemetry'
export { default as ManagementGovernanceArchAwsFaultInjectionSimulator } from './arch-aws-fault-injection-simulator'
export { default as ManagementGovernanceArchAwsHealthDashboard } from './arch-aws-health-dashboard'
export { default as ManagementGovernanceArchAwsLaunchWizard } from './arch-aws-launch-wizard'
export { default as ManagementGovernanceArchAwsLicenseManager } from './arch-aws-license-manager'
export { default as ManagementGovernanceArchAwsManagementConsole } from './arch-aws-management-console'
export { default as ManagementGovernanceArchAwsOpsworks } from './arch-aws-opsworks'
export { default as ManagementGovernanceArchAwsOrganizations } from './arch-aws-organizations'
export { default as ManagementGovernanceArchAwsProton } from './arch-aws-proton'
export { default as ManagementGovernanceArchAwsResilienceHub } from './arch-aws-resilience-hub'
export { default as ManagementGovernanceArchAwsResourceExplorer } from './arch-aws-resource-explorer'
export { default as ManagementGovernanceArchAwsServiceCatalog } from './arch-aws-service-catalog'
export { default as ManagementGovernanceArchAwsServiceManagementConnector } from './arch-aws-service-management-connector'
export { default as ManagementGovernanceArchAwsSystemsManager } from './arch-aws-systems-manager'
export { default as ManagementGovernanceArchAwsTelcoNetworkBuilder } from './arch-aws-telco-network-builder'
export { default as ManagementGovernanceArchAwsTrustedAdvisor } from './arch-aws-trusted-advisor'
export { default as ManagementGovernanceArchAwsWellArchitectedTool } from './arch-aws-well-architected-tool'
export { default as ManagementGovernanceArchAmazonCloudwatch } from './arch-amazon-cloudwatch'
export { default as ManagementGovernanceArchAmazonManagedGrafana } from './arch-amazon-managed-grafana'
export { default as ManagementGovernanceArchAmazonManagedServiceForPrometheus } from './arch-amazon-managed-service-for-prometheus'
export { default as ManagementGovernanceArchCategoryManagementGovernance } from './arch-category-management-governance'
export { default as ManagementGovernanceResAwsCloudformationChangeSet } from './res-aws-cloudformation-change-set'
export { default as ManagementGovernanceResAwsCloudformationStack } from './res-aws-cloudformation-stack'
export { default as ManagementGovernanceResAwsCloudformationTemplate } from './res-aws-cloudformation-template'
export { default as ManagementGovernanceResAwsCloudtrailCloudtrailLake } from './res-aws-cloudtrail-cloudtrail-lake'
export { default as ManagementGovernanceResAwsLicenseManagerApplicationDiscovery } from './res-aws-license-manager-application-discovery'
export { default as ManagementGovernanceResAwsLicenseManagerLicenseBlending } from './res-aws-license-manager-license-blending'
export { default as ManagementGovernanceResAwsOpsworksApps } from './res-aws-opsworks-apps'
export { default as ManagementGovernanceResAwsOpsworksDeployments } from './res-aws-opsworks-deployments'
export { default as ManagementGovernanceResAwsOpsworksInstances } from './res-aws-opsworks-instances'
export { default as ManagementGovernanceResAwsOpsworksLayers } from './res-aws-opsworks-layers'
export { default as ManagementGovernanceResAwsOpsworksMonitoring } from './res-aws-opsworks-monitoring'
export { default as ManagementGovernanceResAwsOpsworksPermissions } from './res-aws-opsworks-permissions'
export { default as ManagementGovernanceResAwsOpsworksResources } from './res-aws-opsworks-resources'
export { default as ManagementGovernanceResAwsOpsworksStack2 } from './res-aws-opsworks-stack2'
export { default as ManagementGovernanceResAwsOrganizationsAccount } from './res-aws-organizations-account'
export { default as ManagementGovernanceResAwsOrganizationsManagementAccount } from './res-aws-organizations-management-account'
export { default as ManagementGovernanceResAwsOrganizationsOrganizationalUnit } from './res-aws-organizations-organizational-unit'
export { default as ManagementGovernanceResAwsSystemsManagerApplicationManager } from './res-aws-systems-manager-application-manager'
export { default as ManagementGovernanceResAwsSystemsManagerAutomation } from './res-aws-systems-manager-automation'
export { default as ManagementGovernanceResAwsSystemsManagerChangeCalendar } from './res-aws-systems-manager-change-calendar'
export { default as ManagementGovernanceResAwsSystemsManagerChangeManager } from './res-aws-systems-manager-change-manager'
export { default as ManagementGovernanceResAwsSystemsManagerCompliance } from './res-aws-systems-manager-compliance'
export { default as ManagementGovernanceResAwsSystemsManagerDistributor } from './res-aws-systems-manager-distributor'
export { default as ManagementGovernanceResAwsSystemsManagerDocuments } from './res-aws-systems-manager-documents'
export { default as ManagementGovernanceResAwsSystemsManagerIncidentManager } from './res-aws-systems-manager-incident-manager'
export { default as ManagementGovernanceResAwsSystemsManagerInventory } from './res-aws-systems-manager-inventory'
export { default as ManagementGovernanceResAwsSystemsManagerMaintenanceWindows } from './res-aws-systems-manager-maintenance-windows'
export { default as ManagementGovernanceResAwsSystemsManagerOpscenter } from './res-aws-systems-manager-opscenter'
export { default as ManagementGovernanceResAwsSystemsManagerParameterStore } from './res-aws-systems-manager-parameter-store'
export { default as ManagementGovernanceResAwsSystemsManagerPatchManager } from './res-aws-systems-manager-patch-manager'
export { default as ManagementGovernanceResAwsSystemsManagerRunCommand } from './res-aws-systems-manager-run-command'
export { default as ManagementGovernanceResAwsSystemsManagerSessionManager } from './res-aws-systems-manager-session-manager'
export { default as ManagementGovernanceResAwsSystemsManagerStateManager } from './res-aws-systems-manager-state-manager'
export { default as ManagementGovernanceResAwsTrustedAdvisorChecklistCost } from './res-aws-trusted-advisor-checklist-cost'
export { default as ManagementGovernanceResAwsTrustedAdvisorChecklistFaultTolerant } from './res-aws-trusted-advisor-checklist-fault-tolerant'
export { default as ManagementGovernanceResAwsTrustedAdvisorChecklistPerformance } from './res-aws-trusted-advisor-checklist-performance'
export { default as ManagementGovernanceResAwsTrustedAdvisorChecklistSecurity } from './res-aws-trusted-advisor-checklist-security'
export { default as ManagementGovernanceResAwsTrustedAdvisorChecklist } from './res-aws-trusted-advisor-checklist'
export { default as ManagementGovernanceResAmazonCloudwatchAlarm } from './res-amazon-cloudwatch-alarm'
export { default as ManagementGovernanceResAmazonCloudwatchCrossAccountObservability } from './res-amazon-cloudwatch-cross-account-observability'
export { default as ManagementGovernanceResAmazonCloudwatchDataProtection } from './res-amazon-cloudwatch-data-protection'
export { default as ManagementGovernanceResAmazonCloudwatchEventEventBased } from './res-amazon-cloudwatch-event-event-based'
export { default as ManagementGovernanceResAmazonCloudwatchEventTimeBased } from './res-amazon-cloudwatch-event-time-based'
export { default as ManagementGovernanceResAmazonCloudwatchEvidently } from './res-amazon-cloudwatch-evidently'
export { default as ManagementGovernanceResAmazonCloudwatchLogs } from './res-amazon-cloudwatch-logs'
export { default as ManagementGovernanceResAmazonCloudwatchMetricsInsights } from './res-amazon-cloudwatch-metrics-insights'
export { default as ManagementGovernanceResAmazonCloudwatchRum } from './res-amazon-cloudwatch-rum'
export { default as ManagementGovernanceResAmazonCloudwatchRule } from './res-amazon-cloudwatch-rule'
export { default as ManagementGovernanceResAmazonCloudwatchSynthetics } from './res-amazon-cloudwatch-synthetics'